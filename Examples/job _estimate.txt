sweeper_args = dict(
    variables=['U', 'J'],
    values_list=[np.linspace(0, 1, 5),
                 np.linspace(0, 0.25, 5)],
    bw_norm=True,
    save_guess_mfps=False,
    verbose=True,
    n_threads=args.n_threads
    )

solver_args = dict(
    method='sigmoid',
    beta=1.5,
    Itteration_limit=150,
    tolerance=1e-3,
    tol=1e-3,
    )

model_params = dict(
    N_shape=(100, 100),
    Delta_CT=0,
    eps=0)

params_list = [
    (0.8, 1.0, 0.0, 0.7, 0.15),
    (1.0, 0.6, 0.0, 0.7, 0.15),
    (0.0, 0.2, 0.5, 0.0, 0.2),
    (0.2, 0.5, 1.0, 1.0, 0.0),
    (0.5, 0.5, 0.0, 0.5, 0.1)
]

Finished succesfully
    Command being timed: "python3 Diagrams.py"
    User time (seconds): 1643.38
    System time (seconds): 958.63
    Percent of CPU this job got: 723%
    Elapsed (wall clock) time (h:mm:ss or m:ss): 5:59.86
    Average shared text size (kbytes): 0
    Average unshared data size (kbytes): 0
    Average stack size (kbytes): 0
    Average total size (kbytes): 0
    Maximum resident set size (kbytes): 158088
    Average resident set size (kbytes): 0
    Major (requiring I/O) page faults: 0
    Minor (reclaiming a frame) page faults: 1738065
    Voluntary context switches: 58407
    Involuntary context switches: 459483551
    Swaps: 0
    File system inputs: 0
    File system outputs: 240
    Socket messages sent: 0
    Socket messages received: 0
    Signals delivered: 0
    Page size (bytes): 4096
    Exit status: 0

Estimate:
5x5 = 25 diagram points
~200Mb
~6 minutes
on 8 threads: ~48 computation minutes


extrapolation:
30x30 = 900 diagram points
ratio: 900/25 = 36

memory: ~ 7200Mb ~ 8Gb (per core or total?)
computing time: ~36x48 = 1700 minutes

Assuming total, can use max allowed cores.
otherwise 8Gb/core

Assuming 32 cores,
computing time ~1700/32 = 1 hour


Estimated request:
2 hours
8 Gb (or 32*8)
32 cores

for 
N_Shape = (100,100)
diagram = 30x30


